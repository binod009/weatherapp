{"version":3,"sources":["components/Card.js","components/LocationButton.js","components/SearchBar.js","components/NewCard.js","components/Content.js","components/App.js","apis/weather.js","index.js"],"names":["console","log","Date","toLocaleTimeString","Card","state","city","lat","lon","onFormSubmit","event","preventDefault","props","onLocationSubmit","onInputchange","setState","target","value","getMylocation","window","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","err","className","onClick","this","class","onSubmit","style","borderRadius","type","onChange","placeholder","wind","humidity","cloud","feels","temp","counryname","color","name","day","date","src","alt","main","React","Component","defaultProps","countryname","time","toLocaleDateString","LocationButton","ongetmylatlon","toast","SearchBar","searchcity","errmsg","onFormsubmit","onTermsearch","errcapture","msg","getday","data","dt","weekday","getdate","NewCard","fontSize","fontWeight","fontFamily","undefined","nextday","margin","lineHeight","feels_like","width","height","weather","icon","description","today","Content","padding","country","temp_min","temp_max","ffforecast","map","item","index","sunrise","sunset","KEY","axios","create","endpoints","forecast","App","currentweather","onsetlatlon","a","all","endpoint","get","params","units","appid","response","daily","slice","ontermsendRequest","term","then","catch","error","length","sys","renderconditional","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.93566dde.chunk.js","sourcesContent":["import React from 'react';\r\nimport './WeatherApp.css'\r\n\r\n\r\nconst weathericon = [{\r\nSunny:{\r\nsrc:\"./weatericon/sunny.png\"\r\n},\r\nClouds:{\r\n  src:\"./weatericon/cloud.png\"\r\n},\r\nRain:{\r\n  src:\"./weatericon/rain.png\"\r\n},\r\nClear:{\r\n  src:\"./weatericon/clearday.png\"\r\n},\r\nClearnight:{\r\nsrc:\"./weathericon/clearnight.png\"\r\n},\r\nClearDay:{\r\n  src:\"./weathericon/clearday.png\"\r\n}\r\n}\r\n]\r\nconsole.log(weathericon[0].Sunny.src);\r\n\r\nconst time= new Date().toLocaleTimeString();\r\nclass Card extends React.Component{\r\n  state  = {city:\"\",lat:\"\",lon:\"\"}\r\n\r\n  onFormSubmit=(event)=>{\r\n   event.preventDefault();\r\n   console.log('iam submitted');\r\n   this.state.city === \"\" ? this.props.onLocationSubmit(this.state.lat,this.state.lon) : \r\n   this.props.onFormSubmit(this.state.city);\r\n  \r\n    }\r\n onInputchange=(event)=>{\r\n  this.setState({city:event.target.value})\r\n }\r\n getMylocation =()=>{\r\n  window.navigator.geolocation.getCurrentPosition(\r\n  position=>{\r\n    this.setState({\r\n      lat:position.coords.latitude,\r\n      lon:position.coords.longitude\r\n    })\r\n    },\r\n    err=>console.log(err));\r\n}\r\nrender(){\r\n\r\n    return(\r\n      <div>\r\n          <button className=\"geolocation\" onClick={this.getMylocation}><i class=\"map marker alternate icon\"></i></button>\r\n<form onSubmit={this.onFormSubmit}>\r\n<div className=\"item-container\">\r\n        <div className=\"left-container\">\r\n            <div className=\"input-group\">\r\n            <div className=\"ui icon input\">\r\n            <i className=\"search icon\"></i>\r\n            <input style={{borderRadius:'5px'}}type=\"text\" value={this.state.city}  onChange={this.onInputchange} placeholder=\"Enter city\"/>\r\n            </div>\r\n            \r\n            </div>\r\n         \r\n            <hr/>\r\n            <div className=\"title\">\r\n            <h1 className=\"weather-title\">Weather Details</h1>\r\n           </div>\r\n            <div className=\"weather-details\">\r\n         <div className=\"details-item\">\r\n          <div className=\"details-title\">\r\n            <div>Wind :</div>\r\n            <div>Himudity :</div>\r\n            <div>Cloud :</div>\r\n            <div>Feels like:</div>\r\n          </div>\r\n          <div className=\"details-title-value\">\r\n             <div>{this.props.wind}</div>\r\n             <div>{this.props.humidity}</div>\r\n             <div>{this.props.cloud}</div>\r\n             <div>{this.props.feels}</div>\r\n            </div>\r\n         </div>\r\n         </div>\r\n    </div>\r\n           \r\n  <div className=\"right-container\">\r\n <div className=\"temp-container\">\r\n     <div className=\"temp-value\">\r\n          <div><h1>{this.props.temp}</h1></div>\r\n     </div>\r\n      \r\n      <div className=\"location-timedate\">\r\n        <div className=\"location-text\">{this.props.counryname},<span style={{color:'yellow'}}>{this.props.name}</span></div>\r\n        <div className=\"location-text2\">{} {this.props.day} {this.props.date}</div> \r\n   \r\n      </div>\r\n      <div className=\"icon-text\">\r\n        <div><img src=\"./weathericon.sunny.png\" alt=\"icon\"/></div> \r\n        <div>{this.props.main}</div>\r\n      </div>\r\n\r\n\r\n            </div>\r\n\r\n            </div>\r\n            \r\n</div>\r\n  </form> \r\n  </div>\r\n        )\r\n    }\r\n}\r\n\r\nCard.defaultProps = {\r\n  humidity: \"75%\",\r\n  cloud: \"12%\",\r\n  wind: \"1km/h\",\r\n  feels: \"\",\r\n  countryname: \"Nepal\",\r\n  time: \"00:00:00\",\r\n  day: \"Saturday\",\r\n  date: new Date().toLocaleDateString(),\r\n  main: \"sunny\",\r\n  name:'Kathmandu'\r\n}\r\nexport default Card;","import React from 'react';\r\nimport './WeatherApp.css'\r\nimport { ToastContainer,toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst LocationButton=(props)=>{\r\nconst getMylocation=()=>{\r\n        window.navigator.geolocation.getCurrentPosition(\r\n        position=>{\r\n          props.ongetmylatlon(position.coords.latitude,position.coords.longitude)\r\n           },\r\n          err=>toast(\"Location Access Denied\")\r\n          )}\r\nreturn( \r\n  <>\r\n   <button onClick={getMylocation} className=\"btn\"><i className=\"fa fa-map-marker\"></i></button>         \r\n  <ToastContainer/>\r\n  </>\r\n   )\r\n}\r\nexport default LocationButton;","  import React from 'react';\r\n  import LocationButton from './LocationButton';\r\n  import Erroralert from './Erroralert';\r\nclass SearchBar extends React.Component{\r\n  state={searchcity:\"\",errmsg:\"\"}\r\n\r\n  onInputchange=(event)=>{\r\n    this.setState({searchcity:event.target.value})\r\n  }\r\n  onFormsubmit=(event)=>{\r\n    event.preventDefault();\r\n    this.props.onTermsearch(this.state.searchcity);\r\n  }\r\nerrcapture=(msg)=>{\r\nthis.setState({errmsg:msg});\r\n}\r\nrender(){\r\nreturn(\r\n<div className=\"search-bar\">\r\n<div><label>Enter City or country</label></div>\r\n  <div className=\"ui input focus\">\r\n  <form onSubmit={this.onFormsubmit}>\r\n         <input className=\"inpt\" value={this.state.searchcity} type=\"text\" onChange={this.onInputchange}/>\r\n         <button className=\"searchbtn\" type=\"submit\">Search</button>\r\n  </form>\r\n        <LocationButton errcapture ={this.errcapture} ongetmylatlon={this.props.ongetmylatlon}/>\r\n    </div>\r\n \r\n   \r\n    </div>\r\n)\r\n}\r\n\r\n\r\n  }\r\n  export default SearchBar;","import React from 'react'\r\nimport './WeatherApp.css'\r\n\r\nfunction getday(data){\r\n if(data){\r\nconst today = new Date(data.dt * 1000).toLocaleDateString(\"en\", {\r\n    weekday: \"long\",\r\n});\r\nreturn today;\r\n}\r\n\r\n}\r\nfunction getdate(data){\r\nif(data){\r\n const date = new Date(data.dt * 1000).toLocaleDateString();\r\n        return date;\r\n    }\r\n}\r\nfunction getsrc(data){\r\n    const src = \"http://openweathermap.org/img/wn/\"+data.weather[0].icon +\".png\";\r\n    return src;\r\n    \r\n}\r\nconst NewCard = props =>{\r\n    return(\r\n        <>\r\n        <div className='container'>\r\n        <div className=\"container-weather\">\r\n             <div className=\"ddp-container\">\r\n             <br/>\r\n            <span style={{fontSize:\"25px\",fontWeight:\"bold\",color:\"#e65965\",fontFamily:\"serif\"}}>{props.nextday!==undefined ? getday(props.nextday): props.day}</span><br/>\r\n           <span style={{fontSize:\"18px\",color:\"#34495E\",fontFamily:\"Georgia\"}}>Date:{props.nextday!==undefined ? getdate(props.nextday): props.date}</span>\r\n       <hr/>\r\n             <span style={{fontSize:\"8px\",color:\"#b2abff\",fontFamily:\"serif\",margin:\"10px\",lineHeight:\"20px\"}}>Feels_Like: {props.nextday!==undefined ? props.nextday.feels_like.day : '**'}℃</span>\r\n            </div><br/>\r\n            <div className=\"imagetemp-container\">\r\n               <div><img width=\"50px\" height=\"50px\" src={props.nextday!==undefined?getsrc(props.nextday):props.icon} alt=\"weather-icon\"/></div>\r\n                <span style={{color:\"#e65965\"}}><h1>{props.nextday!==undefined ? props.nextday.temp.day: props.day}℃</h1></span>\r\n                <span style={{fontFamily:\"sans-seri\",fontSize:\"20px\",color:\"#DC7633\"}}><p>{props.nextday!==undefined ? props.nextday.weather[0].description : props.description}</p></span>\r\n            </div> \r\n            \r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nNewCard.defaultProps = {\r\n    today:\"***\",\r\n    description:\"----\",\r\n    date:\"-/--/-\",\r\n    day:'*',\r\n    icon:'http://openweathermap.org/img/wn/01d.png',\r\n\r\n\r\n}\r\nexport default NewCard;\r\n","import React from 'react';\r\nimport './WeatherApp.css'\r\nimport Tabldata from './Tabledata';\r\nimport NewCard from './NewCard';\r\n\r\n\r\nconst Content=(props)=>{\r\n   \r\n       return(\r\n        <>\r\n        <div className=\"wrapper-container\">\r\n            <div className=\"wrapper-div\">\r\n                <div className=\"weatherimage\">\r\n                    <img width=\"60px\" height=\"60px\" alt=\"weather icon\"src={props.src}/>\r\n                <span style={{color:\"white\",fontSize:\"22px\",fontWeight:\"bold\"}}>{props.description}</span>\r\n                    </div>\r\n               <div className=\"temp-location\">\r\n                   <span style={{fontSize:\"38px\"}}>{props.temp}℃</span>\r\n                   <span style={{fontSize:\"30px\",padding:\"5px\",fontFamily:\"sans-serif\"}}>{props.city},</span>\r\n                   <span style={{fontSize:\"35px\",fontFamily:\"sans-serif\",fontWeight:\"bold\",lineHeight:\"35px\"}}>{props.country}</span>\r\n            </div>\r\n           <div className=\"flex-sunriseset\">\r\n            <div style={{fontSize:\"20px\",color:\"white\",fontWeight:\"bold\",fontFamily:\"monospace\"}}>Temp_min:<span style={{color:\"#73c2fb\",fontSize:\"18px\"}}>{props.temp_min}℃</span></div>\r\n            {/* <p style={{color:\"#F7E985\",fontSize:\"18px\",textAlign:\"center\"}}>{props.temp_min}</p> */}\r\n           <div style={{fontSize:\"20px\",color:\"white\",fontWeight:\"bold\",fontFamily:\"monospace\"}}>Temp_max:<span style={{color:\"#73c2fb\",fontSize:\"18px\"}}>{props.temp_max}℃</span></div>\r\n           {/* <p style={{color:\"#DC5200\",fontSize:\"18px\",textAlign:\"center\"}}>{props.temp_max}</p></div> */}\r\n           </div>\r\n           \r\n            \r\n            </div>\r\n           \r\n        </div>\r\n            <br/>\r\n\r\n<div className=\"weather-container\">\r\n    {\r\n     props.ffforecast !==undefined  ? props.ffforecast.map((item,index)=>{\r\n        return <NewCard key={index} nextday={item}/>\r\n    }) : <NewCard />\r\n  \r\n    }\r\n    \r\n  \r\n  \r\n    \r\n    \r\n    \r\n\r\n    \r\n\r\n</div>\r\n</>\r\n )\r\n\r\n}\r\nContent.defaultProps= {\r\n    city:\"Dhankuta\",\r\n    description:\"Feels good\",\r\n    country:\"Nepal\",\r\n    temp:\"18\",\r\n    day:\"Haze\",\r\n    src:\"/weathericon/sun.png\",\r\n    sunrise:\"00:00:00\",\r\n    sunset:\"00:00:00\",\r\n    temp_min:\"--\",\r\n    temp_max:\"--\"\r\n\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\nimport './WeatherApp.css'\r\nimport reactDOM from 'react-dom';\r\nimport Card from './Card';\r\nimport axios from 'axios';\r\nimport SearchBar from './SearchBar';\r\nimport Content from './Content';\r\nimport LocationButton from './LocationButton';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport weather from '../apis/weather';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\n\r\n\r\n\r\n\r\nconst KEY = \"ffc44228cc6a329afede43e24d918213\";\r\n\r\nconst endpoints = [\r\n 'https://api.openweathermap.org/data/2.5/weather?',\r\n 'https://api.openweathermap.org/data/2.5/onecall?&exclude=current,minutely,hourly,alerts',\r\n];\r\n\r\nlet forecast = [];\r\nclass App  extends React.Component{\r\n  state={currentweather:[],ffforecast:[],time:\"\",errmsg:\"\"}\r\n  onsetlatlon = async (lat,lon)=>{\r\n  const time=new Date().toLocaleTimeString();\r\n  this.setState({time:time})\r\n  const response = await axios.all(endpoints.map(endpoint=>axios.get(endpoint,{\r\n    params:{\r\n      lat:lat,\r\n      lon:lon,\r\n      units:'metric',\r\n      appid:KEY,\r\n        }  \r\n     }),\r\n  ));\r\n  \r\nforecast = response[1].data.daily.slice(1,7);\r\n this.setState({\r\n      currentweather:response[0].data,\r\n      ffforecast:forecast, \r\n    })\r\n    console.log(this.state.ffforecast);\r\n   forecast=[];\r\n}\r\n\r\n \r\nontermsendRequest = async (term)=>{\r\n await axios.get(endpoints[0]+`q=${term}&units=metric&appid=${KEY}`).then(response=>{\r\n  this.setState({\r\n    currentweather:response.data\r\n  })\r\n}).catch(err=>{\r\n if(err){\r\n   toast.error(\"Type City Name correctly \")\r\n }\r\n})\r\n}\r\n\r\nrenderconditional(props){\r\nif(props.weather.length<=0){\r\nreturn <Content/>\r\n}\r\nconst src=\"http://openweathermap.org/img/wn/\"+props.weather.weather[0].icon +\".png\";\r\nreturn<>\r\n<Content ffforecast = {props.ffforecast} src={src}temp={props.weather.main.temp} temp_min={props.weather.main.temp_min} temp_max={props.weather.main.temp_max} country={props.weather.sys.country} city={props.weather.name} description={props.weather.weather[0].description} />\r\n<ToastContainer/>\r\n</>\r\n} \r\n\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <SearchBar onTermsearch={this.ontermsendRequest} ongetmylatlon={this.onsetlatlon}/>\r\n     \r\n       <this.renderconditional ffforecast = {this.state.ffforecast} weather={this.state.currentweather} time={this.state.time}/>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  }\r\n\r\nexport default App;","import axios from 'axios';\r\nimport axois from 'axios';\r\n\r\nexport default axios.create({\r\n\r\n});\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\nReactDOM.render(\r\n    <App/>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}